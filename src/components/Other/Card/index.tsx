import { useState } from "react"; import { FaDesktop, FaMobileAlt, FaGithub, FaShareSquare } from "react-icons/fa"; import AnimatedTexDown from "@/components/Animations/AnimatedTexDown"; import { Box, DivButton, Title, DivIcons, Div, Button } from "./style"; import AnimatedIconDown from "@/components/Animations/AnimatedIconDown"; import Icon from "@/components/Other/Icon";const Card = (props: any) => { const [isHovered, setIsHovered] = useState(false); const handleMouseEnter = () => { setIsHovered(true); }; const handleMouseLeave = () => { setIsHovered(false); }; const { id, name, tags, demo, github, screens, image } = props.data; const Item = { hidden: { scale: 0, }, show: { scale: 1, transition: { type: "spring", duration: 0.5, }, }, }; const GradientBackground = { hidden: { background: "linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%)", }, show: { background: "linear-gradient(180deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 1) 100%)", transition: { duration: 0.5 }, }, }; return ( <Box key={id} variants={Item} image={image} onHoverStart={() => setIsHovered(true)} onHoverEnd={() => setIsHovered(false)} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} > <Div animate={isHovered ? "show" : "hidden"} variants={GradientBackground} transition={{ duration: 0.5, delay: 0.1, type: "spring", damping: 35 }} > <AnimatedTexDown> <Title>{name}</Title> <DivIcons justify_content={"flex-end"}> {screens.desktop && <FaDesktop className="icon" />} {screens.mobile && <FaMobileAlt className="icon" />} </DivIcons> </AnimatedTexDown> <AnimatedIconDown> <DivIcons justify_content={"flex-start"}> {tags.map((elem: any, index: number) => ( <Icon key={index} className="imageCard" id={elem} width={27.2} height={27.2} size={27.2}/> ))} </DivIcons> <DivButton> <Button href={demo} target="_blank" aria-label="deploy" > <FaShareSquare className="icon" /> </Button> <Button href={github} target="_blank" aria-label="github" > <FaGithub className="icon" /> </Button> </DivButton> </AnimatedIconDown> </Div> </Box> ); }; export default Card;